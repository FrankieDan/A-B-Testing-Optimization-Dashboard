# -*- coding: utf-8 -*-
"""ab_test_user_data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p5rlRzeVXpSBMe9BD9QQw42RCVZziXJi
"""

import pandas as pd
import numpy as np

np.random.seed(42)

n_users = 5000
user_ids = np.arange(10001, 10001 + n_users)
cohorts = np.random.choice(['A', 'B'], size=n_users)
platforms = np.random.choice(['iOS', 'Android', 'PC'], size=n_users)
regions = np.random.choice(['US', 'EU', 'Asia'], size=n_users)
event_dates = pd.date_range(start='2024-11-01', periods=30).to_series().sample(n_users, replace=True).values

# Simulate session time and conversion based on cohort
session_time = np.where(cohorts == 'A',
                        np.random.normal(200, 50, n_users),
                        np.random.normal(236, 55, n_users))  # 18% lift in B group

conversion = np.where(cohorts == 'A',
                      np.random.binomial(1, 0.12, n_users),
                      np.random.binomial(1, 0.145, n_users))  # 20.8% higher in B group

df = pd.DataFrame({
    'user_id': user_ids,
    'cohort': cohorts,
    'feature_flag': (cohorts == 'B').astype(int),
    'session_time': session_time.round(1),
    'conversion': conversion,
    'platform': platforms,
    'region': regions,
    'event_date': pd.to_datetime(event_dates)
})

df.to_csv("ab_test_user_data.csv", index=False)
df.head()

import pandas as pd

df = pd.read_csv("ab_test_user_data.csv")
df['cohort'] = df['cohort'].astype('category')
df.head()

summary = df.groupby('cohort').agg(
    users=('user_id', 'count'),
    avg_session_time=('session_time', 'mean'),
    conversion_rate=('conversion', 'mean')
).round(2)

print(summary)

from scipy import stats

a_time = df[df['cohort'] == 'A']['session_time']
b_time = df[df['cohort'] == 'B']['session_time']

t_stat, p_val = stats.ttest_ind(a_time, b_time, equal_var=False)

print(f"T-Test: t-stat={t_stat:.3f}, p-value={p_val:.4f}")

import statsmodels.api as sm

convert_a = df[df['cohort'] == 'A']['conversion']
convert_b = df[df['cohort'] == 'B']['conversion']

successes = [convert_a.sum(), convert_b.sum()]
n = [len(convert_a), len(convert_b)]

z_stat, p_val = sm.stats.proportions_ztest(count=successes, nobs=n)
print(f"Z-Test: z-stat={z_stat:.3f}, p-value={p_val:.4f}")

lift = (convert_b.mean() - convert_a.mean()) / convert_a.mean() * 100
print(f"Conversion Uplift: {lift:.2f}%")

df.to_csv('ab_test_user_data.csv', index=False)

from google.colab import files
files.download('ab_test_user_data.csv')